#pragma comment(linker, "/STACK:102400000,102400000")#include <bits/stdc++.h>#include <ctime>#include <iostream>#include <assert.h>#include <vector>#include <queue>#include <cstdio>#include <algorithm>#include <cstring>#define fi first#define se second#define endl '\n'#define o2(x) (x)*(x)#define BASE_MAX 31#define mk make_pair#define eb push_back#define SZ(x) ((int)(x).size())#define all(x) (x).begin(), (x).end()#define clr(a, b) memset((a),(b),sizeof((a)))#define iis std::ios::sync_with_stdio(false); cin.tie(0)#define my_unique(x) sort(all(x)),x.erase(unique(all(x)),x.end())using namespace std;#pragma optimize("-O3")typedef long long LL;typedef unsigned long long uLL;typedef pair<int, int> pii;inline LL read() {    LL x = 0;int f = 0;    char ch = getchar();    while (ch < '0' || ch > '9') f |= (ch == '-'), ch = getchar();    while (ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + ch - '0', ch = getchar();    return x = f ? -x : x;}inline void write(LL x, bool f) {    if (x == 0) {putchar('0'); if(f)putchar('\n');else putchar(' ');return;}    if (x < 0) {putchar('-');x = -x;}    static char s[23];    int l = 0;    while (x != 0)s[l++] = x % 10 + 48, x /= 10;    while (l)putchar(s[--l]);    if(f)putchar('\n');else putchar(' ');}int lowbit(int x) { return x & (-x); }template<class T>T big(const T &a1, const T &a2) { return a1 > a2 ? a1 : a2; }template<class T>T sml(const T &a1, const T &a2) { return a1 < a2 ? a1 : a2; }template<typename T, typename ...R>T big(const T &f, const R &...r) { return big(f, big(r...)); }template<typename T, typename ...R>T sml(const T &f, const R &...r) { return sml(f, sml(r...)); }void debug_out() { cout << '\n'; }template<typename T, typename ...R>void debug_out(const T &f, const R &...r) {cout << f << " ";debug_out(r...);}#define debug(...) cout << "[" << #__VA_ARGS__ << "]: ", debug_out(__VA_ARGS__);const LL INFLL = 0x3f3f3f3f3f3f3f3fLL;const int HMOD[] = {1000000009, 1004535809};const LL BASE[] = {1572872831, 1971536491};const int mod = 998244353;//715827883const int MOD = 1e9 + 7;//998244353const int INF = 0x3f3f3f3f;const int MXN = 1e6 + 7;const int MXE = 2e6 + 7;LL ksm(LL a, LL b, int Mod = mod) {LL res = 1;for(; b; b >>= 1, a = a * a % Mod) if(b & 1) res = res * a % Mod;return res;}int n, m;class LFUCache {public:    LFUCache(int capacity) :cap(capacity),lst(1) {}        int get(int key) {        if(all.find(key) == all.end()) return -1;        put(key, all[key].first);        return all[key].first;    }        void put(int key, int value) {        if(cap == 0) return;        pair<int, int> tmp = make_pair(value, 1);        if(all.find(key) != all.end()) {            tmp = all[key];            fre[tmp.second].erase(mp[key]);            ++ tmp.second;            tmp.first = value;        }else if(cap == all.size()) {            int ret = fre[lst].back();            mp.erase(ret);            all.erase(ret);            fre[lst].pop_back();        }        fre[tmp.second].push_front(key);        all[key] = tmp;        mp[key] = fre[tmp.second].begin();        if(fre[lst].size() == 0) ++ lst;        if(tmp.second < lst) lst = tmp.second;    }    int cap, lst;//当前list中最低频率    unordered_map<int, list<int>> fre;//频率对应list(存key)    unordered_map<int, pair<int, int>> all;//key对应value和频率    unordered_map<int, list<int>::iterator> mp;//key对应list位置};int main() {#ifndef ONLINE_JUDGE    freopen("D:\\in.in", "r", stdin);    // freopen("D:\\out.out", "w", stdout);#endif    LFUCache cache = LFUCache( 2 /* capacity */ );    LFUCache *pcache = new LFUCache( 2 /* capacity */ );    cache = *pcache;    cache.put(2, 2);    cache.put(1, 2);    cout << cache.get(2) << endl;       // returns 1    cache.put(4, 2);    // evicts key 2    cout << cache.get(1) << endl;       // returns -1 (not found)    cout << cache.get(2) << endl;    cache.put(4, 4);    // evicts key 1    cout << cache.get(1) << endl;       // returns -1 (not found)    cout << cache.get(3) << endl;       // returns 3    cout << cache.get(4) << endl;       // returns 4#ifndef ONLINE_JUDGE    // cout << "time cost:" << 1.0 * clock() / CLOCKS_PER_SEC << "ms" << endl;#endif    return 0;}